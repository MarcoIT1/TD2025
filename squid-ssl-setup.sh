#!/bin/bash

# Complete Squid SSL Bump Proxy Setup Script
# For Ubuntu 22.04 LTS with squid-openssl
# Author: System Administrator
# Version: 2.0

set -e

echo "ðŸš€ Starting Complete Squid SSL Bump Setup..."
echo "=============================================="

# Function to print colored output
print_status() {
    echo -e "\033[1;34m[INFO]\033[0m $1"
}

print_success() {
    echo -e "\033[1;32m[SUCCESS]\033[0m $1"
}

print_warning() {
    echo -e "\033[1;33m[WARNING]\033[0m $1"
}

print_error() {
    echo -e "\033[1;31m[ERROR]\033[0m $1"
}

# Check if running as root
if [[ $EUID -eq 0 ]]; then
   print_error "This script should not be run as root directly. It will use sudo when needed."
   exit 1
fi

# Update system packages
print_status "Updating system packages..."
sudo apt update
sudo apt upgrade -y

# Install required packages
print_status "Installing Squid with SSL support and dependencies..."
sudo apt install -y squid-openssl openssl curl wget net-tools

print_success "Packages installed successfully"

# Stop squid service if running
print_status "Stopping any existing Squid service..."
sudo systemctl stop squid 2>/dev/null || true
sudo systemctl disable squid 2>/dev/null || true

# Backup original configuration if it exists
print_status "Backing up original Squid configuration..."
if [ -f /etc/squid/squid.conf ]; then
    BACKUP_FILE="/etc/squid/squid.conf.backup.$(date +%Y%m%d_%H%M%S)"
    sudo cp /etc/squid/squid.conf "$BACKUP_FILE"
    print_success "Original configuration backed up to $BACKUP_FILE"
fi

# Create SSL certificate directory
print_status "Creating SSL certificate directory..."
sudo mkdir -p /etc/squid/ssl_cert
sudo chown proxy:proxy /etc/squid/ssl_cert
sudo chmod 700 /etc/squid/ssl_cert

# Generate SSL certificate for Squid
print_status "Generating SSL certificate for Squid..."
sudo openssl req -new -newkey rsa:2048 -days 365 -nodes -x509 \
    -keyout /etc/squid/ssl_cert/squid.pem \
    -out /etc/squid/ssl_cert/squid.pem \
    -subj "/C=US/ST=State/L=City/O=ProxyServer/OU=IT/CN=squid-proxy.local" 2>/dev/null

sudo chown proxy:proxy /etc/squid/ssl_cert/squid.pem
sudo chmod 600 /etc/squid/ssl_cert/squid.pem
print_success "SSL certificate generated successfully"

# Create SSL database directory
print_status "Creating SSL certificate database directory..."
sudo mkdir -p /var/lib/squid/ssl_db
sudo chown proxy:proxy /var/lib/squid/ssl_db
sudo chmod 700 /var/lib/squid/ssl_db

# Check for SSL certificate generator
print_status "Checking for SSL certificate generator tools..."
SSL_CERTGEN=""
for tool in security_file_certgen ssl_crtd; do
    FOUND_TOOL=$(sudo find /usr -name "*$tool*" 2>/dev/null | head -1)
    if [ -n "$FOUND_TOOL" ]; then
        SSL_CERTGEN="$FOUND_TOOL"
        print_success "Found SSL certificate generator: $SSL_CERTGEN"
        break
    fi
done

# Initialize SSL certificate database
if [ -n "$SSL_CERTGEN" ]; then
    print_status "Initializing SSL certificate database..."
    sudo -u proxy "$SSL_CERTGEN" -c -s /var/lib/squid/ssl_db -M 4MB 2>/dev/null || {
        print_warning "SSL certificate generator found but initialization failed - using fallback"
        SSL_CERTGEN=""
    }
    if [ -n "$SSL_CERTGEN" ]; then
        print_success "SSL certificate database initialized"
    fi
fi

if [ -z "$SSL_CERTGEN" ]; then
    print_warning "SSL certificate generator not available - using basic SSL configuration"
    sudo touch /var/lib/squid/ssl_db/index.txt
    echo "01" | sudo tee /var/lib/squid/ssl_db/serial > /dev/null
    sudo chown -R proxy:proxy /var/lib/squid/ssl_db/
fi

# Create comprehensive Squid configuration
print_status "Creating Squid SSL configuration..."
sudo tee /etc/squid/squid.conf > /dev/null << 'EOF'
# Squid SSL Bump Proxy Configuration
# Generated by automated setup script

# Basic proxy ports
http_port 3128
https_port 3129 cert=/etc/squid/ssl_cert/squid.pem ssl-bump intercept

# SSL certificate generation (if available)
sslcrtd_program /usr/lib/squid/security_file_certgen -s /var/lib/squid/ssl_db -M 4MB
sslcrtd_children 8 startup=1 idle=1

# SSL bump configuration
acl step1 at_step SslBump1
acl step2 at_step SslBump2
acl step3 at_step SslBump3

ssl_bump peek step1
ssl_bump peek step2
ssl_bump bump step3

# Network ACLs
acl localnet src 10.0.0.0/8     # RFC1918 private networks
acl localnet src 172.16.0.0/12
acl localnet src 192.168.0.0/16
acl localnet src fc00::/7       # RFC 4193 local private network range
acl localnet src fe80::/10      # RFC 4291 link-local (directly plugged) machines

# Port ACLs
acl SSL_ports port 443
acl Safe_ports port 80          # http
acl Safe_ports port 21          # ftp
acl Safe_ports port 443         # https
acl Safe_ports port 70          # gopher
acl Safe_ports port 210         # wais
acl Safe_ports port 1025-65535  # unregistered ports
acl Safe_ports port 280         # http-mgmt
acl Safe_ports port 488         # gss-http
acl Safe_ports port 591         # filemaker
acl Safe_ports port 777         # multiling http

# Method ACLs
acl CONNECT method CONNECT

# Access control rules
http_access deny !Safe_ports
http_access deny CONNECT !SSL_ports
http_access allow localhost manager
http_access deny manager
http_access allow localnet
http_access allow localhost
http_access deny all

# Cache configuration
cache_dir ufs /var/spool/squid 1000 16 256
maximum_object_size 4096 KB
cache_mem 256 MB
coredump_dir /var/spool/squid

# Logging configuration
access_log /var/log/squid/access.log squid
cache_log /var/log/squid/cache.log
cache_store_log /var/log/squid/store.log
logfile_rotate 10

# DNS configuration
dns_nameservers 8.8.8.8 8.8.4.4 1.1.1.1

# Cache refresh patterns
refresh_pattern ^ftp:           1440    20%     10080
refresh_pattern ^gopher:        1440    0%      1440
refresh_pattern -i (/cgi-bin/|\?) 0     0%      0
refresh_pattern .               0       20%     4320

# Performance tuning
client_lifetime 1 day
half_closed_clients off
EOF

# Adjust configuration based on SSL tool availability
if [ -z "$SSL_CERTGEN" ]; then
    print_status "Adjusting configuration for basic SSL support..."
    sudo sed -i '/sslcrtd_program/d' /etc/squid/squid.conf
    sudo sed -i '/sslcrtd_children/d' /etc/squid/squid.conf
    sudo sed -i 's/ssl_bump bump step3/ssl_bump splice step3/' /etc/squid/squid.conf
fi

# Create log directory if it doesn't exist
sudo mkdir -p /var/log/squid
sudo chown proxy:proxy /var/log/squid

# Initialize squid cache directories
print_status "Initializing Squid cache directories..."
sudo squid -z

# Start and enable squid service
print_status "Starting Squid service..."
sudo systemctl daemon-reload
sudo systemctl start squid
sudo systemctl enable squid

# Wait a moment for service to start
sleep 3

# Check service status
print_status "Verifying Squid service status..."
if sudo systemctl is-active --quiet squid; then
    print_success "Squid is running successfully!"
    
    # Get server IP
    SERVER_IP=$(hostname -I | awk '{print $1}')
    
    # Test the proxy
    print_status "Testing proxy functionality..."
    if curl -x "$SERVER_IP:3128" --connect-timeout 10 -s http://www.google.com -I > /dev/null 2>&1; then
        print_success "HTTP proxy test passed!"
    else
        print_warning "HTTP proxy test failed - check configuration"
    fi
    
else
    print_error "Squid failed to start. Checking logs..."
    echo "Recent cache log entries:"
    sudo tail -20 /var/log/squid/cache.log 2>/dev/null || echo "No cache log available"
    exit 1
fi

# Display final configuration summary
echo ""
echo "ðŸŽ‰ SETUP COMPLETE!"
echo "=============================================="
echo "Server IP: $SERVER_IP"
echo ""
echo "Proxy Configuration:"
echo "  HTTP Proxy:  $SERVER_IP:3128"
echo "  HTTPS Proxy: $SERVER_IP:3129"
echo ""
echo "Files Created:"
echo "  âœ“ Configuration: /etc/squid/squid.conf"
echo "  âœ“ SSL Certificate: /etc/squid/ssl_cert/squid.pem"
echo "  âœ“ SSL Database: /var/lib/squid/ssl_db/"
echo ""
echo "Log Files:"
echo "  â€¢ Access Log: /var/log/squid/access.log"
echo "  â€¢ Cache Log: /var/log/squid/cache.log"
echo "  â€¢ Store Log: /var/log/squid/store.log"
echo ""
echo "Test Commands:"
echo "  curl -x $SERVER_IP:3128 http://www.google.com -I"
echo "  curl -x $SERVER_IP:3128 -k https://www.google.com -I"
echo ""
echo "Management Commands:"
echo "  sudo systemctl status squid    # Check status"
echo "  sudo systemctl restart squid   # Restart service"
echo "  sudo tail -f /var/log/squid/access.log  # View access logs"
echo ""
echo "Firewall Configuration (if needed):"
echo "  sudo ufw allow 3128"
echo "  sudo ufw allow 3129"
echo "=============================================="

print_success "Squid SSL Bump Proxy setup completed successfully!"
